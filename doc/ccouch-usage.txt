# All ccouch commands are working in the context of a current local
# repository.  In some cases, it will be a system-wide repository.
# In other cases, it will be a repository specific to a project.
# Any local repository may be configured to use the datastore of
# another, so that all projects can, for example, share a system-wide
# datastore.
#
# In general, an @-sign before a URI means 'the thing described by
# this resource', which may be a list of resource, a reference to a
# single resource, or a resource describing a directory or a
# collection.


# Checkout takes a file or directory and exports it to your filesystem
# Usage: ccouch checkout <remote> <local>
ccouch checkout urn:sha1:BLOB a-file.txt
ccouch checkout @urn:sha1:DIRLISTING a-directory
ccouch checkout @urn:sha1:REDIRECTTOAFILEORDIR something


# Merge updates a local directory by adding files to it from another
# (possibly remote) directory.
# Usage: ccouch merge <remote> <local>
ccouch merge @urn:sha1:REMOTEDIR .
ccouch merge @http://togos-dyn.ath.cx/directory-list mahdir/
ccouch merge http://togos-dyn.ath.cx/mahfiles/ mahfiles/


# Store takes local files or directories, imports them into the repository's
# data store, and outputs the URNs of the stored files/directories.
# Usage: ccouch store <file1> <file2> ...
ccouch store mahfile.mp3
ccouch store somedir


# Storify moves files into the store, hardlinks them back to their
# current position, if possible, and outputs their URNs.
# Usage: ccouch storify <file1> <file2> ...
ccouch storify mahfile.mp3
ccouch storify mahdir
